---
import { getCollection, type CollectionEntry } from "astro:content"
import MainLayout from "../layouts/MainLayout.astro"
import Callout from "../components/Callout.astro"
import { Icon } from "astro-icon/components"
import { RESUME_FILE } from "../consts"

type Experience = CollectionEntry<"experiences">
type Skill = CollectionEntry<"skills">

const experiences: Experience[] = (await getCollection("experiences")).sort(
  (a: Experience, b: Experience) => b.data.id - a.data.id,
)

const skills: Skill[] = (await getCollection("skills")).sort(
  (a: Skill, b: Skill) => a.data.id - b.data.id,
)

// this is here because astro can't handle linebreaks in
const callout_style = `
  flex items-center space-x-2 underline decoration-1
  underline-offset-4 hover:font-bold
`
---

<MainLayout title="Curriculum Vitae">
  <Callout
    as="a"
    slot="callout"
    class={callout_style}
    href={RESUME_FILE}
    target="_blank"
    rel="noopener noreferrer"
  >
    <Icon name="arrow-down-to-line" />
    <span>Download Resume</span>
  </Callout>

  <div class="mt-[-2rem] flex flex-col sm:mt-[-4rem] md:flex-row">
    <div class="w-full p-4 md:w-1/2">
      <ul>
        {
          skills.map((skill: Skill) => (
            <li class="mb-6">
              <header class="mb-4 mt-1 text-lg font-semibold underline underline-offset-4">
                {skill.data.name}
              </header>
              <div class="flex flex-wrap gap-x-4 font-medium">
                {skill.data.items.map((item) => (
                  <span class="text-sm tracking-tight">{item}</span>
                ))}
              </div>
            </li>
          ))
        }
      </ul>
    </div>

    <div class="my-4 block border-t border-black sm:hidden"></div>
    <div class="mx-4 hidden sm:block md:border-l md:border-black"></div>

    <div class="w-full p-4 md:w-1/2">
      <ul>
        {
          experiences.map((exp: Experience, index) => (
            <li
              class={`mb-6 ${index > 0 ? "border-t border-gray-300 pt-6" : ""}`}
            >
              <header class="mb-4">
                <div class="mb-1 flex items-center justify-between">
                  <div class="text-xl font-bold tracking-tight">
                    {exp.data.company}
                  </div>
                  <div class="text-lg font-bold text-gray-700">
                    {exp.data.role}
                  </div>
                </div>

                <div class="flex items-center justify-between text-sm font-medium text-gray-600">
                  <div>{exp.data.date}</div>
                  <div>{exp.data.location}</div>
                </div>

                {exp.data.is_internship && (
                  <div class="text-xs text-gray-500">(Internship)</div>
                )}
              </header>

              {exp.data.description && (
                <div class="mb-4">
                  {exp.data.description.map((desc) => (
                    <p class="mb-2 text-sm tracking-tighter">{`- ${desc}`}</p>
                  ))}
                </div>
              )}

              {exp.data.points && (
                <div class="flex flex-wrap gap-2">
                  {exp.data.points.map((point) => (
                    <span class="inline-block rounded-sm bg-gray-200 px-2 py-1 text-sm text-gray-700">
                      {point}
                    </span>
                  ))}
                </div>
              )}
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</MainLayout>
